name: Build CUDA 11 Wheels

on:
  workflow_dispatch:
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        cibw_archs: ["auto64"]
        cibw_build: ["cp39", "cp310", "cp311", "cp312"]

    steps:
      - uses: actions/checkout@v3
        name: Check out
        with:
          submodules: recursive    

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.11'
 
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.2 delvewheel wheel


      - name: Building wheels on Linux
        run: |
              python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: ${{ matrix.cibw_build }}-*
          CIBW_SKIP: "*musllinux*"
          CIBW_BUILD_VERBOSITY: 3
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_ALL_LINUX: sed -i s/mirror.centos.org/vault.centos.org/g /etc/yum.repos.d/*.repo &&
                                   sed -i s/^#.*baseurl=http/baseurl=http/g /etc/yum.repos.d/*.repo &&
                                   sed -i s/^mirrorlist=http/#mirrorlist=http/g /etc/yum.repos.d/*.repo && 
                                   yum install -y llvm libevent-devel openssl-devel && 
                                   bash ci-utils/install_cuda_yum.sh 11 && 
                                   bash ci-utils/install_prereq_linux.sh --build_arrow yes &&
                                   mkdir -p /tmp/nyxus_bld &&
                                   cp -r local_install /tmp/nyxus_bld
          CIBW_ENVIRONMENT_LINUX: LD_LIBRARY_PATH="/tmp/nyxus_bld/local_install/lib:/tmp/nyxus_bld/local_install/lib64:/usr/local/cuda/targets/x86_64-linux/lib:$LD_LIBRARY_PATH" CPATH="/usr/local/cuda/targets/x86_64-linux/include:$CPATH" PATH="/usr/local/cuda/bin:$PATH" NYXUS_DEP_DIR="/tmp/nyxus_bld/local_install" CXXFLAGS="-I /usr/local/cuda/include" CMAKE_ARGS="-DUSEGPU=ON -DCMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc -DCMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES=/usr/local/cuda/include" NYXUS_GPU_WHEEL="ON" 
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel repair --exclude=libcufft.so --exclude=libcufft.so.10 --exclude=libcufft.so.10.4.2.109 --exclude=libcudart.so --exclude=libcudart.so.11.0 --exclude=libcudart.so.11.3.109  -w {dest_dir} {wheel}"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          CIBW_TEST_REQUIRES: numpy pandas pyarrow pytest bfio
          CIBW_BEFORE_TEST_LINUX: >-
            pip install "numpy<2.3.1" --only-binary=:all:
          CIBW_TEST_REQUIRES_LINUX: pandas pyarrow pytest bfio
          CIBW_TEST_COMMAND: python -m pip check

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nyxus-cuda11-wheels-${{ matrix.os }}-${{ matrix.cibw_archs }}-${{ matrix.cibw_build }}
          path: dist/*.whl
          retention-days: 1