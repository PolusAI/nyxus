name: Build Wheels

on:
  workflow_dispatch:
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      MACOSX_DEPLOYMENT_TARGET: "10.15"
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, windows-latest, ubuntu-22.04-arm]
        cibw_archs: ["auto64"]
        cibw_build: ["cp39", "cp310", "cp311", "cp312"]

    steps:
      - uses: actions/checkout@v3
        name: Check out
        with:
          submodules: recursive    

      - uses: ilammy/msvc-dev-cmd@v1
        name: Add MSVS Path

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.11'
 
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.2 delvewheel wheel

      - name: Building wheels 
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: ${{ matrix.cibw_build }}-*
          CIBW_SKIP: "*musllinux*"
          CIBW_BUILD_VERBOSITY: 3
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux_2_28_x86_64:latest
          CIBW_MANYLINUX_AARCH64_IMAGE: quay.io/pypa/manylinux_2_28_aarch64:latest
          CIBW_BEFORE_ALL_MACOS:  brew install llvm@16 && 
                                   bash ci-utils/install_prereq_linux.sh --build_arrow yes &&
                                   mkdir -p /tmp/nyxus_bld &&
                                   cp -r local_install /tmp/nyxus_bld 
          CIBW_BEFORE_ALL_LINUX:  dnf -y install llvm libevent-devel openssl-devel && 
                                   bash ci-utils/install_prereq_linux.sh --build_arrow yes &&
                                   mkdir -p /tmp/nyxus_bld &&
                                   cp -r local_install /tmp/nyxus_bld
          CIBW_BEFORE_ALL_WINDOWS: ci-utils\install_prereq_win.bat &&
                                   xcopy /E /I /y local_install C:\TEMP\nyxus_bld\local_install
                                     
          CIBW_ENVIRONMENT_MACOS: >
            SDKROOT="$(xcrun --sdk macosx --show-sdk-path)"
            CC="/opt/homebrew/opt/llvm@16/bin/clang"
            CXX="/opt/homebrew/opt/llvm@16/bin/clang++"
            CMAKE_OSX_SYSROOT="$SDKROOT"
            MACOSX_DEPLOYMENT_TARGET="11.0"
            # If you truly need to force libc++ headers (usually not needed), do this instead of -I .../include:
            # CXXFLAGS="-isysroot $SDKROOT -stdlib=libc++"
            LDFLAGS="-isysroot $SDKROOT"
            PATH="/opt/homebrew/opt/llvm@16/bin:$PATH"
            REPAIR_LIBRARY_PATH="/tmp/nyxus_bld/local_install/lib:/tmp/nyxus_bld/local_install/lib64"
            NYXUS_DEP_DIR="/tmp/nyxus_bld/local_install"
          CIBW_ENVIRONMENT_LINUX: LD_LIBRARY_PATH="/tmp/nyxus_bld/local_install/lib:/tmp/nyxus_bld/local_install/lib64:$LD_LIBRARY_PATH" NYXUS_DEP_DIR="/tmp/nyxus_bld/local_install" 
          CIBW_ENVIRONMENT_WINDOWS: PATH="C:\\TEMP\\nyxus_bld\\local_install\\bin;$PATH" NYXUS_DEP_DIR="C:\\TEMP\\nyxus_bld\\local_install"
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-listdeps {wheel} && DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          CIBW_TEST_REQUIRES: numpy pandas pyarrow pytest bfio
          CIBW_TEST_COMMAND: pytest -vv {project}/tests/python

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nyxus-wheels-${{ matrix.os }}-${{ matrix.cibw_archs }}-${{ matrix.cibw_build }}
          path: dist/*.whl
          retention-days: 1


  build_wheels_apple_arm64:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      MACOSX_DEPLOYMENT_TARGET: "11.0"
    strategy:
      matrix:
        os: [macos-13-xlarge]
        cibw_archs: ["arm64"]
        cibw_build: ["cp39", "cp310", "cp311",  "cp312"]

    steps:
      - uses: actions/checkout@v3
        name: Check out

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.11'
  
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.2 delocate wheel

      - name: Building wheels 
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: ${{ matrix.cibw_build }}-*
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ARCHS_MACOS: arm64
          CIBW_BEFORE_ALL_MACOS:  brew install llvm@16 && 
                                    sudo xcode-select -s /Applications/Xcode_14.2.app &&
                                    bash ci-utils/install_prereq_linux.sh --build_arrow yes &&
                                    mkdir -p /tmp/nyxus_bld &&
                                    cp -r local_install /tmp/nyxus_bld 
                                      
          CIBW_ENVIRONMENT_MACOS: SDKROOT="$(xcrun --sdk macosx --show-sdk-path)" CMAKE_OSX_SYSROOT="$SDKROOT" MACOSX_DEPLOYMENT_TARGET="11.0" PATH="/opt/homebrew/opt/llvm@16/bin:$PATH" CC="/opt/homebrew/opt/llvm@16/bin/clang" CXX="/opt/homebrew/opt/llvm@16/bin/clang++" CXXFLAGS="-isysroot $SDKROOT -stdlib=libc++" LDFLAGS="-isysroot $SDKROOT" REPAIR_LIBRARY_PATH="/tmp/nyxus_bld/local_install/lib:/tmp/nyxus_bld/local_install/lib64" NYXUS_DEP_DIR="/tmp/nyxus_bld/local_install"
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-listdeps {wheel} && DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          CIBW_TEST_REQUIRES: numpy pandas pyarrow pytest bfio
          CIBW_TEST_COMMAND: pytest -vv {project}/tests/python

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nyxus-wheels-apple-arm64-${{ matrix.os }}-${{ matrix.cibw_archs }}-${{ matrix.cibw_build }}
          path: dist/*.whl
          retention-days: 1
