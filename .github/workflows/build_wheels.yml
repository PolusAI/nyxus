name: Build Wheels

on:
  workflow_dispatch:
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      MACOSX_DEPLOYMENT_TARGET: "10.15"
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-12, windows-latest]
        cibw_archs: ["auto64"]
        cibw_build: ["cp38-*", "cp39-*", "cp310-*", "cp311-*"]

    steps:
      - uses: actions/checkout@v3
        name: Check out
        with:
          submodules: recursive    

      - uses: ilammy/msvc-dev-cmd@v1
        name: Add MSVS Path

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.9'
 
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.12.1 delvewheel wheel

      - name: Building wheels 
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_SKIP: "*musllinux*"
          CIBW_BUILD_VERBOSITY: 3
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_ALL_MACOS:  python3 -m pip install setuptools==68.2.2 &&
                                   bash ci-utils/install_prereq_linux.sh --build_arrow yes &&
                                   mkdir -p /tmp/nyxus_bld &&
                                   cp -r local_install /tmp/nyxus_bld 
          CIBW_BEFORE_ALL_LINUX:  yum install -y llvm libevent-devel openssl-devel && 
                                   bash ci-utils/install_arrow_yum.sh &&
                                   bash ci-utils/install_prereq_linux.sh --build_arrow no &&
                                   mkdir -p /tmp/nyxus_bld &&
                                   cp -r local_install /tmp/nyxus_bld
          CIBW_BEFORE_ALL_WINDOWS: ci-utils\install_prereq_win.bat &&
                                   xcopy /E /I /y local_install C:\TEMP\nyxus_bld\local_install
                                     
          CIBW_ENVIRONMENT_MACOS: REPAIR_LIBRARY_PATH="/tmp/nyxus_bld/local_install/lib:/tmp/nyxus_bld/local_install/lib64" ON_GITHUB="TRUE" NYXUS_DEP_DIR="/tmp/nyxus_bld/local_install"
          CIBW_ENVIRONMENT_LINUX: LD_LIBRARY_PATH="/tmp/nyxus_bld/local_install/lib:/tmp/nyxus_bld/local_install/lib64:$LD_LIBRARY_PATH" ON_GITHUB="TRUE" NYXUS_DEP_DIR="/tmp/nyxus_bld/local_install" 
          CIBW_ENVIRONMENT_WINDOWS: PATH="$TEMP\\nyxus\\bin;$PATH" ON_GITHUB="TRUE" NYXUS_DEP_DIR="C:\\TEMP\\nyxus_bld\\local_install"
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-listdeps {wheel} && DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          CIBW_TEST_REQUIRES: numpy pandas pytest requests
          CIBW_TEST_COMMAND_MACOS: pytest {project}/tests/python
          CIBW_TEST_COMMAND_LINUX: pytest {project}/tests/python
          CIBW_TEST_COMMAND_WINDOWS: pytest {project}/tests/python -m "not arrow"

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nyxus-wheels
          path: dist/*.whl
          retention-days: 1
