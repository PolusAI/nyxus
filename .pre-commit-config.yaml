# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: check-added-large-files  # prevents giant files from being committed.
    -   id: check-ast  # simply checks whether the files parse as valid python.
    -   id: check-byte-order-marker  # forbids files which have a utf-8 byte-order marker.
    -   id: check-builtin-literals  # requires literal syntax when initializing empty or zero python builtin types.
    -   id: check-case-conflict  # checks for files that would conflict in case-insensitive filesystems.
    -   id: check-docstring-first  # checks a common error of defining a docstring after code.
    -   id: check-executables-have-shebangs  # ensures that (non-binary) executables have a shebang.
    -   id: check-json  # checks json files for parseable syntax.
    -   id: check-shebang-scripts-are-executable  # ensures that (non-binary) files with a shebang are executable.
    # -   id: pretty-format-json  # sets a standard for formatting json files.
    -   id: check-merge-conflict  # checks for files that contain merge conflict strings.
    -   id: check-symlinks  # checks for symlinks which do not point to anything.
    -   id: check-toml  # checks toml files for parseable syntax.
    -   id: check-vcs-permalinks  # ensures that links to vcs websites are permalinks.
    -   id: check-xml  # checks xml files for parseable syntax.
    -   id: check-yaml  # checks yaml files for parseable syntax.
    -   id: debug-statements  # checks for debugger imports and py37+ `breakpoint()` calls in python source.
    -   id: destroyed-symlinks  # detects symlinks which are changed to regular files with a content of a path which that symlink was pointing to.
    # -   id: detect-aws-credentials  # detects *your* aws credentials from the aws cli credentials file.
    -   id: detect-private-key  # detects the presence of private keys.
    # -   id: double-quote-string-fixer  # replaces double quoted strings with single quoted strings.
    -   id: end-of-file-fixer  # ensures that a file is either empty, or ends with one newline.
    -   id: file-contents-sorter  # sorts the lines in specified files (defaults to alphabetical). you must provide list of target files as input in your .pre-commit-config.yaml file.
    -   id: fix-byte-order-marker  # removes utf-8 byte order marker.
    -   id: fix-encoding-pragma  # adds # -*- coding: utf-8 -*- to the top of python files.
    -   id: forbid-new-submodules  # prevents addition of new git submodules.
    -   id: forbid-submodules  # forbids any submodules in the repository
    -   id: mixed-line-ending  # replaces or checks mixed line ending.
    # -   id: name-tests-test  # verifies that test files are named correctly.
    # NOTE: (In the pytest documentation both test_*.py and *_test.py are valid, but in this hook only the latter is valid.)
    -   id: no-commit-to-branch  # don't commit to branch (default master & main)
    -   id: requirements-txt-fixer  # sorts entries in requirements.txt.
    # NOTE: requirements-txt-fixer modifies requirements.txt in-place!
    -   id: sort-simple-yaml  # sorts simple yaml files which consist only of top-level keys, preserving comments and blocks.
    -   id: trailing-whitespace  # trims trailing whitespace.
#-   repo: https://github.com/pre-commit/mirrors-autopep8
#    rev: v2.0.2
#    hooks:
#    -   id: autopep8
#        args: [--exit-code, --recursive, --diff, --max-line-length, "120"]
#-   repo: https://github.com/pre-commit/mirrors-mypy
#    rev: v1.1.1
#    hooks:
#    -   id: mypy
#        args: [--no-strict-optional, --ignore-missing-imports, --no-incremental]
-   repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
    -   id: python-check-blanket-noqa  # Enforce that noqa annotations always occur with specific codes. Sample annotations: # noqa: F401, # noqa: F401,W203
    # -   id: python-check-blanket-type-ignore  # Enforce that # type: ignore annotations always occur with specific codes. Sample annotations: # type: ignore[attr-defined], # type: ignore[attr-defined, name-defined]
    -   id: python-check-mock-methods  # Prevent common mistakes of assert mck.not_called(), assert mck.called_once_with(...) and mck.assert_called.
    -   id: python-no-eval  # A quick check for the eval() built-in function
    -   id: python-no-log-warn  # A quick check for the deprecated .warn() method of python loggers
    -   id: python-use-type-annotations  # Enforce that python3.6+ type annotations are used instead of type comments
    -   id: rst-backticks  # Detect common mistake of using single backticks when writing rst
    -   id: rst-directive-colons  # Detect mistake of rst directive not ending with double colon or space before the double colon
    -   id: rst-inline-touching-normal  # Detect mistake of inline code touching normal text in rst
    # -   id: text-unicode-replacement-char  # Forbid files which have a UTF-8 Unicode replacement character
- repo: https://github.com/shellcheck-py/shellcheck-py
  rev: v0.9.0.5
  hooks:
  - id: shellcheck
    args: ["--exclude=SC2103,SC2164"]
- repo: https://github.com/codespell-project/codespell
  rev: v2.2.5
  hooks:
  - id: codespell
