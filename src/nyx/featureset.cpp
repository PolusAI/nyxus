#include <map>
#include <string>
#include "featureset.h"
#include "roi_cache.h"

using namespace Nyxus;

namespace Nyxus
{
	std::map <std::string, Feature2D> UserFacingFeatureNames =
	{
		//=== 2D features

		// Pixel intensity stats:
		{ "COV", Feature2D::COV },
		{ "COVERED_IMAGE_INTENSITY_RANGE", Feature2D::COVERED_IMAGE_INTENSITY_RANGE },
		{ "ENERGY", Feature2D::ENERGY },
		{ "ENTROPY", Feature2D::ENTROPY },
		{ "EXCESS_KURTOSIS", Feature2D::EXCESS_KURTOSIS },
		{ "HYPERFLATNESS", Feature2D::HYPERFLATNESS },
		{ "HYPERSKEWNESS", Feature2D::HYPERSKEWNESS },
		{ "INTEGRATED_INTENSITY", Feature2D::INTEGRATED_INTENSITY },
		{ "INTERQUARTILE_RANGE", Feature2D::INTERQUARTILE_RANGE },
		{ "KURTOSIS", Feature2D::KURTOSIS },
		{ "MASS_DISPLACEMENT", Feature2D::MASS_DISPLACEMENT },
		{ "MAX", Feature2D::MAX },
		{ "MEAN", Feature2D::MEAN },
		{ "MEAN_ABSOLUTE_DEVIATION", Feature2D::MEAN_ABSOLUTE_DEVIATION },
		{ "MEDIAN", Feature2D::MEDIAN },
		{ "MEDIAN_ABSOLUTE_DEVIATION", Feature2D::MEDIAN_ABSOLUTE_DEVIATION },
		{ "MIN", Feature2D::MIN },
		{ "MODE", Feature2D::MODE },
		{ "P01", Feature2D::P01 },
		{ "P10", Feature2D::P10 },
		{ "P25", Feature2D::P25 },
		{ "P75", Feature2D::P75 },
		{ "P90", Feature2D::P90 },
		{ "P99", Feature2D::P99 },
		{ "QCOD", Feature2D::QCOD },
		{ "RANGE", Feature2D::RANGE },
		{ "ROBUST_MEAN", Feature2D::ROBUST_MEAN },
		{ "ROBUST_MEAN_ABSOLUTE_DEVIATION", Feature2D::ROBUST_MEAN_ABSOLUTE_DEVIATION },
		{ "ROOT_MEAN_SQUARED", Feature2D::ROOT_MEAN_SQUARED },
		{ "SKEWNESS", Feature2D::SKEWNESS },
		{ "STANDARD_DEVIATION", Feature2D::STANDARD_DEVIATION },
		{ "STANDARD_DEVIATION_BIASED", Feature2D::STANDARD_DEVIATION_BIASED },
		{ "STANDARD_ERROR", Feature2D::STANDARD_ERROR },
		{ "UNIFORMITY", Feature2D::UNIFORMITY },
		{ "UNIFORMITY_PIU", Feature2D::UNIFORMITY_PIU },
		{ "VARIANCE", Feature2D::VARIANCE },
		{ "VARIANCE_BIASED", Feature2D::VARIANCE_BIASED },
		{ "WEIGHTED_CENTROID_X", Feature2D::WEIGHTED_CENTROID_X },
		{ "WEIGHTED_CENTROID_Y", Feature2D::WEIGHTED_CENTROID_Y },

		// Morphology:
		{ "AREA_PIXELS_COUNT", Feature2D::AREA_PIXELS_COUNT },
		{ "AREA_UM2", Feature2D::AREA_UM2 },
		{ "CENTROID_X", Feature2D::CENTROID_X },
		{ "CENTROID_Y", Feature2D::CENTROID_Y },
		{ "COMPACTNESS", Feature2D::COMPACTNESS },
		{ "BBOX_YMIN", Feature2D::BBOX_YMIN },
		{ "BBOX_XMIN", Feature2D::BBOX_XMIN },
		{ "BBOX_HEIGHT", Feature2D::BBOX_HEIGHT },
		{ "BBOX_WIDTH", Feature2D::BBOX_WIDTH },
		{ "DIAMETER_EQUAL_AREA", Feature2D::DIAMETER_EQUAL_AREA },

		// Ellipse fitting:
		{ "MAJOR_AXIS_LENGTH", Feature2D::MAJOR_AXIS_LENGTH },
		{ "MINOR_AXIS_LENGTH", Feature2D::MINOR_AXIS_LENGTH },
		{ "ECCENTRICITY", Feature2D::ECCENTRICITY},
		{ "ELONGATION", Feature2D::ELONGATION},
		{ "ORIENTATION", Feature2D::ORIENTATION},
		{ "ROUNDNESS", Feature2D::ROUNDNESS},

		// Neighbor features:
		{ "NUM_NEIGHBORS", Feature2D::NUM_NEIGHBORS},
		{ "PERCENT_TOUCHING", Feature2D::PERCENT_TOUCHING},
		{ "CLOSEST_NEIGHBOR1_DIST", Feature2D::CLOSEST_NEIGHBOR1_DIST},
		{ "CLOSEST_NEIGHBOR1_ANG", Feature2D::CLOSEST_NEIGHBOR1_ANG},
		{ "CLOSEST_NEIGHBOR2_DIST", Feature2D::CLOSEST_NEIGHBOR2_DIST},
		{ "CLOSEST_NEIGHBOR2_ANG", Feature2D::CLOSEST_NEIGHBOR2_ANG},
		{ "ANG_BW_NEIGHBORS_MEAN", Feature2D::ANG_BW_NEIGHBORS_MEAN},
		{ "ANG_BW_NEIGHBORS_STDDEV", Feature2D::ANG_BW_NEIGHBORS_STDDEV},
		{ "ANG_BW_NEIGHBORS_MODE", Feature2D::ANG_BW_NEIGHBORS_MODE},

		{ "EXTENT", Feature2D::EXTENT},
		{ "ASPECT_RATIO", Feature2D::ASPECT_RATIO},

		{ "DIAMETER_EQUAL_PERIMETER", Feature2D::DIAMETER_EQUAL_PERIMETER },
		{ "EDGE_MEAN_INTENSITY", Feature2D::EDGE_MEAN_INTENSITY },
		{ "EDGE_STDDEV_INTENSITY", Feature2D::EDGE_STDDEV_INTENSITY},
		{ "EDGE_MAX_INTENSITY", Feature2D::EDGE_MAX_INTENSITY},
		{ "EDGE_MIN_INTENSITY", Feature2D::EDGE_MIN_INTENSITY},

		{ "CONVEX_HULL_AREA", Feature2D::CONVEX_HULL_AREA},
		{ "SOLIDITY", Feature2D::SOLIDITY},

		{ "PERIMETER", Feature2D::PERIMETER},
		{ "EDGE_MEAN_INTENSITY", Feature2D::PERIMETER},
		{ "EDGE_STDDEV_INTENSITY", Feature2D::PERIMETER},
		{ "EDGE_MAX_INTENSITY", Feature2D::PERIMETER},
		{ "EDGE_MIN_INTENSITY", Feature2D::PERIMETER},
		{ "EDGE_INTEGRATED_INTENSITY", Feature2D::EDGE_INTEGRATED_INTENSITY},

		{ "CIRCULARITY", Feature2D::CIRCULARITY},	// alternatively called 'form factor'

		{ "EROSIONS_2_VANISH", Feature2D::EROSIONS_2_VANISH},
		{ "EROSIONS_2_VANISH_COMPLEMENT", Feature2D::EROSIONS_2_VANISH_COMPLEMENT},

		{ "FRACT_DIM_BOXCOUNT", Feature2D::FRACT_DIM_BOXCOUNT},
		{ "FRACT_DIM_PERIMETER", Feature2D::FRACT_DIM_PERIMETER},

		{ "EXTREMA_P1_X", Feature2D::EXTREMA_P1_X},
		{ "EXTREMA_P1_Y", Feature2D::EXTREMA_P1_Y},
		{ "EXTREMA_P2_X", Feature2D::EXTREMA_P2_X},
		{ "EXTREMA_P2_Y", Feature2D::EXTREMA_P2_Y},
		{ "EXTREMA_P3_X", Feature2D::EXTREMA_P3_X},
		{ "EXTREMA_P3_Y", Feature2D::EXTREMA_P3_Y},
		{ "EXTREMA_P4_X", Feature2D::EXTREMA_P4_X},
		{ "EXTREMA_P4_Y", Feature2D::EXTREMA_P4_Y},
		{ "EXTREMA_P5_X", Feature2D::EXTREMA_P5_X},
		{ "EXTREMA_P5_Y", Feature2D::EXTREMA_P5_Y},
		{ "EXTREMA_P6_X", Feature2D::EXTREMA_P6_X},
		{ "EXTREMA_P6_Y", Feature2D::EXTREMA_P6_Y},
		{ "EXTREMA_P7_X", Feature2D::EXTREMA_P7_X},
		{ "EXTREMA_P7_Y", Feature2D::EXTREMA_P7_Y},
		{ "EXTREMA_P8_X", Feature2D::EXTREMA_P8_X},
		{ "EXTREMA_P8_Y", Feature2D::EXTREMA_P8_Y},

		// Caliper features:
		{ "MIN_FERET_ANGLE", Feature2D::MIN_FERET_ANGLE},
		{ "MAX_FERET_ANGLE", Feature2D::MAX_FERET_ANGLE},

		{ "STAT_FERET_DIAM_MIN", Feature2D::STAT_FERET_DIAM_MIN},
		{ "STAT_FERET_DIAM_MAX", Feature2D::STAT_FERET_DIAM_MAX},
		{ "STAT_FERET_DIAM_MEAN", Feature2D::STAT_FERET_DIAM_MEAN},
		{ "STAT_FERET_DIAM_MEDIAN", Feature2D::STAT_FERET_DIAM_MEDIAN},
		{ "STAT_FERET_DIAM_STDDEV", Feature2D::STAT_FERET_DIAM_STDDEV},
		{ "STAT_FERET_DIAM_MODE", Feature2D::STAT_FERET_DIAM_MODE},

		{ "STAT_MARTIN_DIAM_MIN", Feature2D::STAT_MARTIN_DIAM_MIN},
		{ "STAT_MARTIN_DIAM_MAX", Feature2D::STAT_MARTIN_DIAM_MAX},
		{ "STAT_MARTIN_DIAM_MEAN", Feature2D::STAT_MARTIN_DIAM_MEAN},
		{ "STAT_MARTIN_DIAM_MEDIAN", Feature2D::STAT_MARTIN_DIAM_MEDIAN},
		{ "STAT_MARTIN_DIAM_STDDEV", Feature2D::STAT_MARTIN_DIAM_STDDEV},
		{ "STAT_MARTIN_DIAM_MODE", Feature2D::STAT_MARTIN_DIAM_MODE},

		{ "STAT_NASSENSTEIN_DIAM_MIN", Feature2D::STAT_NASSENSTEIN_DIAM_MIN},
		{ "STAT_NASSENSTEIN_DIAM_MAX", Feature2D::STAT_NASSENSTEIN_DIAM_MAX},
		{ "STAT_NASSENSTEIN_DIAM_MEAN", Feature2D::STAT_NASSENSTEIN_DIAM_MEAN},
		{ "STAT_NASSENSTEIN_DIAM_MEDIAN", Feature2D::STAT_NASSENSTEIN_DIAM_MEDIAN},
		{ "STAT_NASSENSTEIN_DIAM_STDDEV", Feature2D::STAT_NASSENSTEIN_DIAM_STDDEV},
		{ "STAT_NASSENSTEIN_DIAM_MODE", Feature2D::STAT_NASSENSTEIN_DIAM_MODE},

		{ "MAXCHORDS_MAX", Feature2D::MAXCHORDS_MAX},
		{ "MAXCHORDS_MAX_ANG", Feature2D::MAXCHORDS_MAX_ANG},
		{ "MAXCHORDS_MIN", Feature2D::MAXCHORDS_MIN},
		{ "MAXCHORDS_MIN_ANG", Feature2D::MAXCHORDS_MIN_ANG},
		{ "MAXCHORDS_MEDIAN", Feature2D::MAXCHORDS_MEDIAN},
		{ "MAXCHORDS_MEAN", Feature2D::MAXCHORDS_MEAN},
		{ "MAXCHORDS_MODE", Feature2D::MAXCHORDS_MODE},
		{ "MAXCHORDS_STDDEV", Feature2D::MAXCHORDS_STDDEV},
		{ "ALLCHORDS_MAX", Feature2D::ALLCHORDS_MAX},
		{ "ALLCHORDS_MAX_ANG", Feature2D::ALLCHORDS_MAX_ANG},
		{ "ALLCHORDS_MIN", Feature2D::ALLCHORDS_MIN},
		{ "ALLCHORDS_MIN_ANG", Feature2D::ALLCHORDS_MIN_ANG},
		{ "ALLCHORDS_MEDIAN", Feature2D::ALLCHORDS_MEDIAN},
		{ "ALLCHORDS_MEAN", Feature2D::ALLCHORDS_MEAN},
		{ "ALLCHORDS_MODE", Feature2D::ALLCHORDS_MODE},
		{ "ALLCHORDS_STDDEV", Feature2D::ALLCHORDS_STDDEV},

		// Miscellaneous:
		{ "EULER_NUMBER", Feature2D::EULER_NUMBER},

		{ "POLYGONALITY_AVE", Feature2D::POLYGONALITY_AVE},
		{ "HEXAGONALITY_AVE", Feature2D::HEXAGONALITY_AVE},
		{ "HEXAGONALITY_STDDEV", Feature2D::HEXAGONALITY_STDDEV},

		{ "DIAMETER_MIN_ENCLOSING_CIRCLE", Feature2D::DIAMETER_MIN_ENCLOSING_CIRCLE},
		{ "DIAMETER_CIRCUMSCRIBING_CIRCLE", Feature2D::DIAMETER_CIRCUMSCRIBING_CIRCLE },
		{ "DIAMETER_INSCRIBING_CIRCLE", Feature2D::DIAMETER_INSCRIBING_CIRCLE },
		{ "GEODETIC_LENGTH", Feature2D::GEODETIC_LENGTH },
		{ "THICKNESS", Feature2D::THICKNESS },

		// ROI radius:
		{ "ROI_RADIUS_MEAN", Feature2D::ROI_RADIUS_MEAN },
		{ "ROI_RADIUS_MAX", Feature2D::ROI_RADIUS_MAX },
		{ "ROI_RADIUS_MEDIAN", Feature2D::ROI_RADIUS_MEDIAN },

		// Texture:
		{ "GLCM_ASM", Feature2D::GLCM_ASM },
		{ "GLCM_ACOR", Feature2D::GLCM_ACOR},
		{ "GLCM_CLUPROM", Feature2D::GLCM_CLUPROM },
		{ "GLCM_CLUSHADE", Feature2D::GLCM_CLUSHADE },
		{ "GLCM_CLUTEND", Feature2D::GLCM_CLUTEND },
		{ "GLCM_CONTRAST", Feature2D::GLCM_CONTRAST },
		{ "GLCM_CORRELATION", Feature2D::GLCM_CORRELATION },
		{ "GLCM_DIFAVE", Feature2D::GLCM_DIFAVE },
		{ "GLCM_DIFVAR", Feature2D::GLCM_DIFVAR },
		{ "GLCM_DIFENTRO", Feature2D::GLCM_DIFENTRO },
		{ "GLCM_DIS", Feature2D::GLCM_DIS },
		{ "GLCM_ENERGY", Feature2D::GLCM_ENERGY },
		{ "GLCM_ENTROPY", Feature2D::GLCM_ENTROPY },
		{ "GLCM_HOM1", Feature2D::GLCM_HOM1 },
		{ "GLCM_HOM2", Feature2D::GLCM_HOM2 },
		{ "GLCM_ID", Feature2D::GLCM_ID },
		{ "GLCM_IDN", Feature2D::GLCM_IDN },
		{ "GLCM_IDM", Feature2D::GLCM_IDM },
		{ "GLCM_IDMN", Feature2D::GLCM_IDMN },
		{ "GLCM_INFOMEAS1", Feature2D::GLCM_INFOMEAS1 },
		{ "GLCM_INFOMEAS2", Feature2D::GLCM_INFOMEAS2 },
		{ "GLCM_IV", Feature2D::GLCM_IV },
		{ "GLCM_JAVE", Feature2D::GLCM_JAVE },
		{ "GLCM_JE", Feature2D::GLCM_JE },
		{ "GLCM_JMAX", Feature2D::GLCM_JMAX },
		{ "GLCM_JVAR", Feature2D::GLCM_JVAR },
		{ "GLCM_SUMAVERAGE", Feature2D::GLCM_SUMAVERAGE },
		{ "GLCM_SUMVARIANCE", Feature2D::GLCM_SUMVARIANCE },
		{ "GLCM_SUMENTROPY", Feature2D::GLCM_SUMENTROPY },
		{ "GLCM_VARIANCE", Feature2D::GLCM_VARIANCE },

		{ "GLCM_ASM_AVE", Feature2D::GLCM_ASM_AVE },
		{ "GLCM_ACOR_AVE", Feature2D::GLCM_ACOR_AVE },
		{ "GLCM_CLUPROM_AVE", Feature2D::GLCM_CLUPROM_AVE },
		{ "GLCM_CLUSHADE_AVE", Feature2D::GLCM_CLUSHADE_AVE },
		{ "GLCM_CLUTEND_AVE", Feature2D::GLCM_CLUTEND_AVE },
		{ "GLCM_CONTRAST_AVE", Feature2D::GLCM_CONTRAST_AVE },
		{ "GLCM_CORRELATION_AVE", Feature2D::GLCM_CORRELATION_AVE },
		{ "GLCM_DIFAVE_AVE", Feature2D::GLCM_DIFAVE_AVE },
		{ "GLCM_DIFVAR_AVE", Feature2D::GLCM_DIFVAR_AVE },
		{ "GLCM_DIFENTRO_AVE", Feature2D::GLCM_DIFENTRO_AVE },
		{ "GLCM_DIS_AVE", Feature2D::GLCM_DIS_AVE },
		{ "GLCM_ENERGY_AVE", Feature2D::GLCM_ENERGY_AVE },
		{ "GLCM_ENTROPY_AVE", Feature2D::GLCM_ENTROPY_AVE },
		{ "GLCM_HOM1_AVE", Feature2D::GLCM_HOM1_AVE },
		{ "GLCM_ID_AVE", Feature2D::GLCM_ID_AVE },
		{ "GLCM_IDN_AVE", Feature2D::GLCM_IDN_AVE },
		{ "GLCM_IDM_AVE", Feature2D::GLCM_IDM_AVE },
		{ "GLCM_IDMN_AVE", Feature2D::GLCM_IDMN_AVE },
		{ "GLCM_IV_AVE", Feature2D::GLCM_IV_AVE },
		{ "GLCM_JAVE_AVE", Feature2D::GLCM_JAVE_AVE },
		{ "GLCM_JE_AVE", Feature2D::GLCM_JE_AVE },
		{ "GLCM_INFOMEAS1_AVE", Feature2D::GLCM_INFOMEAS1_AVE },
		{ "GLCM_INFOMEAS2_AVE", Feature2D::GLCM_INFOMEAS2_AVE },
		{ "GLCM_VARIANCE_AVE", Feature2D::GLCM_VARIANCE_AVE },
		{ "GLCM_JMAX_AVE", Feature2D::GLCM_JMAX_AVE },
		{ "GLCM_JVAR_AVE", Feature2D::GLCM_JVAR_AVE },
		{ "GLCM_SUMAVERAGE_AVE", Feature2D::GLCM_SUMAVERAGE_AVE },
		{ "GLCM_SUMVARIANCE_AVE", Feature2D::GLCM_SUMVARIANCE_AVE },
		{ "GLCM_SUMENTROPY_AVE", Feature2D::GLCM_SUMENTROPY_AVE },
		{ "GLCM_VARIANCE_AVE", Feature2D::GLCM_VARIANCE_AVE },

		{ "GLRLM_SRE", Feature2D::GLRLM_SRE },
		{ "GLRLM_LRE", Feature2D::GLRLM_LRE },
		{ "GLRLM_GLN", Feature2D::GLRLM_GLN},
		{ "GLRLM_GLNN", Feature2D::GLRLM_GLNN},
		{ "GLRLM_RLN", Feature2D::GLRLM_RLN},
		{ "GLRLM_RLNN", Feature2D::GLRLM_RLNN},
		{ "GLRLM_RP", Feature2D::GLRLM_RP},
		{ "GLRLM_GLV", Feature2D::GLRLM_GLV},
		{ "GLRLM_RV", Feature2D::GLRLM_RV},
		{ "GLRLM_RE", Feature2D::GLRLM_RE},
		{ "GLRLM_LGLRE", Feature2D::GLRLM_LGLRE},
		{ "GLRLM_HGLRE", Feature2D::GLRLM_HGLRE},
		{ "GLRLM_SRLGLE", Feature2D::GLRLM_SRLGLE},
		{ "GLRLM_SRHGLE", Feature2D::GLRLM_SRHGLE},
		{ "GLRLM_LRLGLE", Feature2D::GLRLM_LRLGLE},
		{ "GLRLM_LRHGLE", Feature2D::GLRLM_LRHGLE},

		{ "GLRLM_SRE_AVE", Feature2D::GLRLM_SRE_AVE},
		{ "GLRLM_LRE_AVE", Feature2D::GLRLM_LRE_AVE},
		{ "GLRLM_GLN_AVE", Feature2D::GLRLM_GLN_AVE },
		{ "GLRLM_GLNN_AVE", Feature2D::GLRLM_GLNN_AVE },
		{ "GLRLM_RLN_AVE", Feature2D::GLRLM_RLN_AVE },
		{ "GLRLM_RLNN_AVE", Feature2D::GLRLM_RLNN_AVE },
		{ "GLRLM_RP_AVE", Feature2D::GLRLM_RP_AVE },
		{ "GLRLM_GLV_AVE", Feature2D::GLRLM_GLV_AVE },
		{ "GLRLM_RV_AVE", Feature2D::GLRLM_RV_AVE },
		{ "GLRLM_RE_AVE", Feature2D::GLRLM_RE_AVE },
		{ "GLRLM_LGLRE_AVE", Feature2D::GLRLM_LGLRE_AVE },
		{ "GLRLM_HGLRE_AVE", Feature2D::GLRLM_HGLRE_AVE },
		{ "GLRLM_SRLGLE_AVE", Feature2D::GLRLM_SRLGLE_AVE },
		{ "GLRLM_SRHGLE_AVE", Feature2D::GLRLM_SRHGLE_AVE },
		{ "GLRLM_LRLGLE_AVE", Feature2D::GLRLM_LRLGLE_AVE },
		{ "GLRLM_LRHGLE_AVE", Feature2D::GLRLM_LRHGLE_AVE },

		{ "GLDZM_SDE", Feature2D::GLDZM_SDE},
		{ "GLDZM_LDE", Feature2D::GLDZM_LDE},
		{ "GLDZM_LGLZE", Feature2D::GLDZM_LGLZE},
		{ "GLDZM_HGLZE", Feature2D::GLDZM_HGLZE},
		{ "GLDZM_SDLGLE", Feature2D::GLDZM_SDLGLE},
		{ "GLDZM_SDHGLE", Feature2D::GLDZM_SDHGLE},
		{ "GLDZM_LDLGLE", Feature2D::GLDZM_LDLGLE},
		{ "GLDZM_LDHGLE", Feature2D::GLDZM_LDHGLE},
		{ "GLDZM_GLNU", Feature2D::GLDZM_GLNU},
		{ "GLDZM_GLNUN", Feature2D::GLDZM_GLNUN},
		{ "GLDZM_ZDNU", Feature2D::GLDZM_ZDNU},
		{ "GLDZM_ZDNUN", Feature2D::GLDZM_ZDNUN},
		{ "GLDZM_ZP", Feature2D::GLDZM_ZP},
		{ "GLDZM_GLM", Feature2D::GLDZM_GLM},
		{ "GLDZM_GLV", Feature2D::GLDZM_GLV},
		{ "GLDZM_ZDM", Feature2D::GLDZM_ZDM},
		{ "GLDZM_ZDV", Feature2D::GLDZM_ZDV},
		{ "GLDZM_ZDE", Feature2D::GLDZM_ZDE},

		{ "GLSZM_SAE", Feature2D::GLSZM_SAE},
		{ "GLSZM_LAE", Feature2D::GLSZM_LAE},
		{ "GLSZM_GLN", Feature2D::GLSZM_GLN },
		{ "GLSZM_GLNN", Feature2D::GLSZM_GLNN },
		{ "GLSZM_SZN", Feature2D::GLSZM_SZN },
		{ "GLSZM_SZNN", Feature2D::GLSZM_SZNN },
		{ "GLSZM_ZP", Feature2D::GLSZM_ZP },
		{ "GLSZM_GLV", Feature2D::GLSZM_GLV },
		{ "GLSZM_ZV", Feature2D::GLSZM_ZV },
		{ "GLSZM_ZE", Feature2D::GLSZM_ZE },
		{ "GLSZM_LGLZE", Feature2D::GLSZM_LGLZE },
		{ "GLSZM_HGLZE", Feature2D::GLSZM_HGLZE },
		{ "GLSZM_SALGLE", Feature2D::GLSZM_SALGLE },
		{ "GLSZM_SAHGLE", Feature2D::GLSZM_SAHGLE },
		{ "GLSZM_LALGLE", Feature2D::GLSZM_LALGLE},
		{ "GLSZM_LAHGLE", Feature2D::GLSZM_LAHGLE},

		{ "GLDM_SDE", Feature2D::GLDM_SDE },
		{ "GLDM_LDE", Feature2D::GLDM_LDE },
		{ "GLDM_GLN", Feature2D::GLDM_GLN },
		{ "GLDM_DN", Feature2D::GLDM_DN },
		{ "GLDM_DNN", Feature2D::GLDM_DNN },
		{ "GLDM_GLV", Feature2D::GLDM_GLV },
		{ "GLDM_DV", Feature2D::GLDM_DV },
		{ "GLDM_DE", Feature2D::GLDM_DE },
		{ "GLDM_LGLE", Feature2D::GLDM_LGLE },
		{ "GLDM_HGLE", Feature2D::GLDM_HGLE },
		{ "GLDM_SDLGLE", Feature2D::GLDM_SDLGLE },
		{ "GLDM_SDHGLE", Feature2D::GLDM_SDHGLE },
		{ "GLDM_LDLGLE", Feature2D::GLDM_LDLGLE },
		{ "GLDM_LDHGLE", Feature2D::GLDM_LDHGLE },

		{ "NGLDM_LDE", Feature2D::NGLDM_LDE},
		{ "NGLDM_HDE", Feature2D::NGLDM_HDE },
		{ "NGLDM_LGLCE", Feature2D::NGLDM_LGLCE },
		{ "NGLDM_HGLCE", Feature2D::NGLDM_HGLCE },
		{ "NGLDM_LDLGLE", Feature2D::NGLDM_LDLGLE },
		{ "NGLDM_LDHGLE", Feature2D::NGLDM_LDHGLE },
		{ "NGLDM_HDLGLE", Feature2D::NGLDM_HDLGLE },
		{ "NGLDM_HDHGLE", Feature2D::NGLDM_HDHGLE },
		{ "NGLDM_GLNU", Feature2D::NGLDM_GLNU },
		{ "NGLDM_GLNUN", Feature2D::NGLDM_GLNUN },
		{ "NGLDM_DCNU", Feature2D::NGLDM_DCNU },
		{ "NGLDM_DCNUN", Feature2D::NGLDM_DCNUN },
		{ "NGLDM_DCP", Feature2D::NGLDM_DCP },
		{ "NGLDM_GLM", Feature2D::NGLDM_GLM },
		{ "NGLDM_GLV", Feature2D::NGLDM_GLV },
		{ "NGLDM_DCM", Feature2D::NGLDM_DCM },
		{ "NGLDM_DCV", Feature2D::NGLDM_DCV },
		{ "NGLDM_DCENT", Feature2D::NGLDM_DCENT },
		{ "NGLDM_DCENE", Feature2D::NGLDM_DCENE },

		{ "NGTDM_COARSENESS", Feature2D::NGTDM_COARSENESS },
		{ "NGTDM_CONTRAST", Feature2D::NGTDM_CONTRAST },
		{ "NGTDM_BUSYNESS", Feature2D::NGTDM_BUSYNESS },
		{ "NGTDM_COMPLEXITY", Feature2D::NGTDM_COMPLEXITY },
		{ "NGTDM_STRENGTH", Feature2D::NGTDM_STRENGTH },

		// Radial distribution:
		{ "ZERNIKE2D", Feature2D::ZERNIKE2D},
		{ "FRAC_AT_D", Feature2D::FRAC_AT_D },
		{ "MEAN_FRAC", Feature2D::MEAN_FRAC },
		{ "RADIAL_CV", Feature2D::RADIAL_CV },

		// 2D shape geometric moments:
		{ "SPAT_MOMENT_00", Feature2D::SPAT_MOMENT_00},
		{ "SPAT_MOMENT_01", Feature2D::SPAT_MOMENT_01},
		{ "SPAT_MOMENT_02", Feature2D::SPAT_MOMENT_02},
		{ "SPAT_MOMENT_03", Feature2D::SPAT_MOMENT_03},
		{ "SPAT_MOMENT_10", Feature2D::SPAT_MOMENT_10},
		{ "SPAT_MOMENT_11", Feature2D::SPAT_MOMENT_11},
		{ "SPAT_MOMENT_12", Feature2D::SPAT_MOMENT_12},
		{ "SPAT_MOMENT_13", Feature2D::SPAT_MOMENT_13},
		{ "SPAT_MOMENT_20", Feature2D::SPAT_MOMENT_20},
		{ "SPAT_MOMENT_21", Feature2D::SPAT_MOMENT_21},
		{ "SPAT_MOMENT_22", Feature2D::SPAT_MOMENT_22},
		{ "SPAT_MOMENT_23", Feature2D::SPAT_MOMENT_23},
		{ "SPAT_MOMENT_30", Feature2D::SPAT_MOMENT_30},

		{ "WEIGHTED_SPAT_MOMENT_00", Feature2D::WEIGHTED_SPAT_MOMENT_00},
		{ "WEIGHTED_SPAT_MOMENT_01", Feature2D::WEIGHTED_SPAT_MOMENT_01},
		{ "WEIGHTED_SPAT_MOMENT_02", Feature2D::WEIGHTED_SPAT_MOMENT_02},
		{ "WEIGHTED_SPAT_MOMENT_03", Feature2D::WEIGHTED_SPAT_MOMENT_03},
		{ "WEIGHTED_SPAT_MOMENT_10", Feature2D::WEIGHTED_SPAT_MOMENT_10},
		{ "WEIGHTED_SPAT_MOMENT_11", Feature2D::WEIGHTED_SPAT_MOMENT_11},
		{ "WEIGHTED_SPAT_MOMENT_12", Feature2D::WEIGHTED_SPAT_MOMENT_12},
		{ "WEIGHTED_SPAT_MOMENT_20", Feature2D::WEIGHTED_SPAT_MOMENT_20},
		{ "WEIGHTED_SPAT_MOMENT_21", Feature2D::WEIGHTED_SPAT_MOMENT_21},
		{ "WEIGHTED_SPAT_MOMENT_30", Feature2D::WEIGHTED_SPAT_MOMENT_30},

		{ "CENTRAL_MOMENT_00", Feature2D::CENTRAL_MOMENT_00 },
		{ "CENTRAL_MOMENT_01", Feature2D::CENTRAL_MOMENT_01 },
		{ "CENTRAL_MOMENT_02", Feature2D::CENTRAL_MOMENT_02 },
		{ "CENTRAL_MOMENT_03", Feature2D::CENTRAL_MOMENT_03 },
		{ "CENTRAL_MOMENT_10", Feature2D::CENTRAL_MOMENT_10 },
		{ "CENTRAL_MOMENT_11", Feature2D::CENTRAL_MOMENT_11 },
		{ "CENTRAL_MOMENT_12", Feature2D::CENTRAL_MOMENT_12 },
		{ "CENTRAL_MOMENT_13", Feature2D::CENTRAL_MOMENT_13 },
		{ "CENTRAL_MOMENT_20", Feature2D::CENTRAL_MOMENT_20 },
		{ "CENTRAL_MOMENT_21", Feature2D::CENTRAL_MOMENT_21 },
		{ "CENTRAL_MOMENT_22", Feature2D::CENTRAL_MOMENT_22 },
		{ "CENTRAL_MOMENT_23", Feature2D::CENTRAL_MOMENT_23 },
		{ "CENTRAL_MOMENT_30", Feature2D::CENTRAL_MOMENT_30 },
		{ "CENTRAL_MOMENT_31", Feature2D::CENTRAL_MOMENT_31 },
		{ "CENTRAL_MOMENT_32", Feature2D::CENTRAL_MOMENT_32 },
		{ "CENTRAL_MOMENT_33", Feature2D::CENTRAL_MOMENT_33 },

		{ "WEIGHTED_CENTRAL_MOMENT_02", Feature2D::WEIGHTED_CENTRAL_MOMENT_02 },
		{ "WEIGHTED_CENTRAL_MOMENT_03", Feature2D::WEIGHTED_CENTRAL_MOMENT_03 },
		{ "WEIGHTED_CENTRAL_MOMENT_11", Feature2D::WEIGHTED_CENTRAL_MOMENT_11 },
		{ "WEIGHTED_CENTRAL_MOMENT_12", Feature2D::WEIGHTED_CENTRAL_MOMENT_12 },
		{ "WEIGHTED_CENTRAL_MOMENT_20", Feature2D::WEIGHTED_CENTRAL_MOMENT_20 },
		{ "WEIGHTED_CENTRAL_MOMENT_21", Feature2D::WEIGHTED_CENTRAL_MOMENT_21 },
		{ "WEIGHTED_CENTRAL_MOMENT_30", Feature2D::WEIGHTED_CENTRAL_MOMENT_30 },

		{ "NORM_CENTRAL_MOMENT_02", Feature2D::NORM_CENTRAL_MOMENT_02},
		{ "NORM_CENTRAL_MOMENT_03", Feature2D::NORM_CENTRAL_MOMENT_03},
		{ "NORM_CENTRAL_MOMENT_11", Feature2D::NORM_CENTRAL_MOMENT_11},
		{ "NORM_CENTRAL_MOMENT_12", Feature2D::NORM_CENTRAL_MOMENT_12},
		{ "NORM_CENTRAL_MOMENT_20", Feature2D::NORM_CENTRAL_MOMENT_20},
		{ "NORM_CENTRAL_MOMENT_21", Feature2D::NORM_CENTRAL_MOMENT_21},
		{ "NORM_CENTRAL_MOMENT_30", Feature2D::NORM_CENTRAL_MOMENT_30},

		{ "NORM_SPAT_MOMENT_00", Feature2D::NORM_SPAT_MOMENT_00 },
		{ "NORM_SPAT_MOMENT_01", Feature2D::NORM_SPAT_MOMENT_01 },
		{ "NORM_SPAT_MOMENT_02", Feature2D::NORM_SPAT_MOMENT_02 },
		{ "NORM_SPAT_MOMENT_03", Feature2D::NORM_SPAT_MOMENT_03 },
		{ "NORM_SPAT_MOMENT_10", Feature2D::NORM_SPAT_MOMENT_10 },
		{ "NORM_SPAT_MOMENT_11", Feature2D::NORM_SPAT_MOMENT_11 },
		{ "NORM_SPAT_MOMENT_12", Feature2D::NORM_SPAT_MOMENT_12 },
		{ "NORM_SPAT_MOMENT_13", Feature2D::NORM_SPAT_MOMENT_13 },
		{ "NORM_SPAT_MOMENT_20", Feature2D::NORM_SPAT_MOMENT_20 },
		{ "NORM_SPAT_MOMENT_21", Feature2D::NORM_SPAT_MOMENT_21 },
		{ "NORM_SPAT_MOMENT_22", Feature2D::NORM_SPAT_MOMENT_22 },
		{ "NORM_SPAT_MOMENT_23", Feature2D::NORM_SPAT_MOMENT_23 },
		{ "NORM_SPAT_MOMENT_30", Feature2D::NORM_SPAT_MOMENT_30 },
		{ "NORM_SPAT_MOMENT_31", Feature2D::NORM_SPAT_MOMENT_31 },
		{ "NORM_SPAT_MOMENT_32", Feature2D::NORM_SPAT_MOMENT_32 },
		{ "NORM_SPAT_MOMENT_33", Feature2D::NORM_SPAT_MOMENT_33 },

		{ "HU_M1", Feature2D::HU_M1 },
		{ "HU_M2", Feature2D::HU_M2 },
		{ "HU_M3", Feature2D::HU_M3},
		{ "HU_M4", Feature2D::HU_M4},
		{ "HU_M5", Feature2D::HU_M5},
		{ "HU_M6", Feature2D::HU_M6},
		{ "HU_M7", Feature2D::HU_M7},

		{ "WT_NORM_CTR_MOM_02", Feature2D::WT_NORM_CTR_MOM_02 },
		{ "WT_NORM_CTR_MOM_03", Feature2D::WT_NORM_CTR_MOM_03 },
		{ "WT_NORM_CTR_MOM_11", Feature2D::WT_NORM_CTR_MOM_11 },
		{ "WT_NORM_CTR_MOM_12", Feature2D::WT_NORM_CTR_MOM_12 },
		{ "WT_NORM_CTR_MOM_20", Feature2D::WT_NORM_CTR_MOM_20 },
		{ "WT_NORM_CTR_MOM_21", Feature2D::WT_NORM_CTR_MOM_21 },
		{ "WT_NORM_CTR_MOM_30", Feature2D::WT_NORM_CTR_MOM_30 },

		{ "WEIGHTED_HU_M1", Feature2D::WEIGHTED_HU_M1},
		{ "WEIGHTED_HU_M2", Feature2D::WEIGHTED_HU_M2},
		{ "WEIGHTED_HU_M3", Feature2D::WEIGHTED_HU_M3},
		{ "WEIGHTED_HU_M4", Feature2D::WEIGHTED_HU_M4},
		{ "WEIGHTED_HU_M5", Feature2D::WEIGHTED_HU_M5},
		{ "WEIGHTED_HU_M6", Feature2D::WEIGHTED_HU_M6},
		{ "WEIGHTED_HU_M7", Feature2D::WEIGHTED_HU_M7},

		// 2D intensity geometric moments

		// -- intensity raw moments
		{ "IMOM_RM_00", Feature2D::IMOM_RM_00 },
		{ "IMOM_RM_01", Feature2D::IMOM_RM_01 },
		{ "IMOM_RM_02", Feature2D::IMOM_RM_02 },
		{ "IMOM_RM_03", Feature2D::IMOM_RM_03 },
		{ "IMOM_RM_10", Feature2D::IMOM_RM_10 },
		{ "IMOM_RM_11", Feature2D::IMOM_RM_11 },
		{ "IMOM_RM_12", Feature2D::IMOM_RM_12 },
		{ "IMOM_RM_13", Feature2D::IMOM_RM_13 },
		{ "IMOM_RM_20", Feature2D::IMOM_RM_20 },
		{ "IMOM_RM_21", Feature2D::IMOM_RM_21 },
		{ "IMOM_RM_22", Feature2D::IMOM_RM_22 },
		{ "IMOM_RM_23", Feature2D::IMOM_RM_23 },
		{ "IMOM_RM_30", Feature2D::IMOM_RM_30 },

		// -- intensity central moments
		{ "IMOM_CM_00", Feature2D::IMOM_CM_00 },
		{ "IMOM_CM_01", Feature2D::IMOM_CM_01 },
		{ "IMOM_CM_02", Feature2D::IMOM_CM_02 },
		{ "IMOM_CM_03", Feature2D::IMOM_CM_03 },
		{ "IMOM_CM_10", Feature2D::IMOM_CM_10 },
		{ "IMOM_CM_11", Feature2D::IMOM_CM_11 },
		{ "IMOM_CM_12", Feature2D::IMOM_CM_12 },
		{ "IMOM_CM_13", Feature2D::IMOM_CM_13 },
		{ "IMOM_CM_20", Feature2D::IMOM_CM_20 },
		{ "IMOM_CM_21", Feature2D::IMOM_CM_21 },
		{ "IMOM_CM_22", Feature2D::IMOM_CM_22 },
		{ "IMOM_CM_23", Feature2D::IMOM_CM_23 },
		{ "IMOM_CM_30", Feature2D::IMOM_CM_30 },
		{ "IMOM_CM_31", Feature2D::IMOM_CM_31 },
		{ "IMOM_CM_32", Feature2D::IMOM_CM_32 },
		{ "IMOM_CM_33", Feature2D::IMOM_CM_33 },

		// -- intensity normalized raw moments
		{ "IMOM_NRM_00", Feature2D::IMOM_NRM_00 },
		{ "IMOM_NRM_01", Feature2D::IMOM_NRM_01 },
		{ "IMOM_NRM_02", Feature2D::IMOM_NRM_02 },
		{ "IMOM_NRM_03", Feature2D::IMOM_NRM_03 },
		{ "IMOM_NRM_10", Feature2D::IMOM_NRM_10 },
		{ "IMOM_NRM_11", Feature2D::IMOM_NRM_11 },
		{ "IMOM_NRM_12", Feature2D::IMOM_NRM_12 },
		{ "IMOM_NRM_13", Feature2D::IMOM_NRM_13 },
		{ "IMOM_NRM_20", Feature2D::IMOM_NRM_20 },
		{ "IMOM_NRM_21", Feature2D::IMOM_NRM_21 },
		{ "IMOM_NRM_22", Feature2D::IMOM_NRM_22 },
		{ "IMOM_NRM_23", Feature2D::IMOM_NRM_23 },
		{ "IMOM_NRM_30", Feature2D::IMOM_NRM_30 },
		{ "IMOM_NRM_31", Feature2D::IMOM_NRM_31 },
		{ "IMOM_NRM_32", Feature2D::IMOM_NRM_32 },
		{ "IMOM_NRM_33", Feature2D::IMOM_NRM_33 },

		// -- intensity normalized central moments
		{ "IMOM_NCM_02", Feature2D::IMOM_NCM_02 },
		{ "IMOM_NCM_03", Feature2D::IMOM_NCM_03 },
		{ "IMOM_NCM_11", Feature2D::IMOM_NCM_11 },
		{ "IMOM_NCM_12", Feature2D::IMOM_NCM_12 },
		{ "IMOM_NCM_20", Feature2D::IMOM_NCM_20 },
		{ "IMOM_NCM_21", Feature2D::IMOM_NCM_21 },
		{ "IMOM_NCM_30", Feature2D::IMOM_NCM_30 },

		// -- intensity Hu's moments 1-7 
		{ "IMOM_HU1", Feature2D::IMOM_HU1 },
		{ "IMOM_HU2", Feature2D::IMOM_HU2 },
		{ "IMOM_HU3", Feature2D::IMOM_HU3 },
		{ "IMOM_HU4", Feature2D::IMOM_HU4 },
		{ "IMOM_HU5", Feature2D::IMOM_HU5 },
		{ "IMOM_HU6", Feature2D::IMOM_HU6 },
		{ "IMOM_HU7", Feature2D::IMOM_HU7 },

		// -- intensity weighted raw moments
		{ "IMOM_WRM_00", Feature2D::IMOM_WRM_00 },
		{ "IMOM_WRM_01", Feature2D::IMOM_WRM_01 },
		{ "IMOM_WRM_02", Feature2D::IMOM_WRM_02 },
		{ "IMOM_WRM_03", Feature2D::IMOM_WRM_03 },
		{ "IMOM_WRM_10", Feature2D::IMOM_WRM_10 },
		{ "IMOM_WRM_11", Feature2D::IMOM_WRM_11 },
		{ "IMOM_WRM_12", Feature2D::IMOM_WRM_12 },
		{ "IMOM_WRM_20", Feature2D::IMOM_WRM_20 },
		{ "IMOM_WRM_21", Feature2D::IMOM_WRM_21 },
		{ "IMOM_WRM_30", Feature2D::IMOM_WRM_30 },

		// -- intensity weighted central moments
		{ "IMOM_WCM_02", Feature2D::IMOM_WCM_02 },
		{ "IMOM_WCM_03", Feature2D::IMOM_WCM_03 },
		{ "IMOM_WCM_11", Feature2D::IMOM_WCM_11 },
		{ "IMOM_WCM_12", Feature2D::IMOM_WCM_12 },
		{ "IMOM_WCM_20", Feature2D::IMOM_WCM_20 },
		{ "IMOM_WCM_21", Feature2D::IMOM_WCM_21 },
		{ "IMOM_WCM_30", Feature2D::IMOM_WCM_30 },

		// -- intensity weighted normalized central moments
		{ "IMOM_WNCM_02", Feature2D::IMOM_WNCM_02 },
		{ "IMOM_WNCM_03", Feature2D::IMOM_WNCM_03 },
		{ "IMOM_WNCM_11", Feature2D::IMOM_WNCM_11 },
		{ "IMOM_WNCM_12", Feature2D::IMOM_WNCM_12 },
		{ "IMOM_WNCM_20", Feature2D::IMOM_WNCM_20 },
		{ "IMOM_WNCM_21", Feature2D::IMOM_WNCM_21 },
		{ "IMOM_WNCM_30", Feature2D::IMOM_WNCM_30 },

		// -- intensity weighted Hu's moments 1-7 
		{ "IMOM_WHU1", Feature2D::IMOM_WHU1 },
		{ "IMOM_WHU2", Feature2D::IMOM_WHU2 },
		{ "IMOM_WHU3", Feature2D::IMOM_WHU3 },
		{ "IMOM_WHU4", Feature2D::IMOM_WHU4 },
		{ "IMOM_WHU5", Feature2D::IMOM_WHU5 },
		{ "IMOM_WHU6", Feature2D::IMOM_WHU6 },
		{ "IMOM_WHU7", Feature2D::IMOM_WHU7 },

		// Gabor filter based feature:
		{ "GABOR", Feature2D::GABOR },
	};

	// Image quality features
	std::map <std::string, FeatureIMQ> UserFacingIMQFeatureNames = {
		{"FOCUS_SCORE", FeatureIMQ::FOCUS_SCORE},
		{"LOCAL_FOCUS_SCORE", FeatureIMQ::LOCAL_FOCUS_SCORE},
		{"POWER_SPECTRUM_SLOPE", FeatureIMQ::POWER_SPECTRUM_SLOPE},
		{"MAX_SATURATION", FeatureIMQ::MAX_SATURATION},
		{"MIN_SATURATION", FeatureIMQ::MIN_SATURATION},
		{"SHARPNESS", FeatureIMQ::SHARPNESS}
	};

	std::map <std::string, FgroupIMQ> UserFacingIMQFeaturegroupNames = {
		{ "*ALL_IMQ*", FgroupIMQ::ALL_IMQ}
	};

	std::map <std::string, Fgroup2D> UserFacing2dFeaturegroupNames =
	{
		{ "*ALL*", Fgroup2D::FG2_ALL},
		{ "*WHOLESLIDE*", Fgroup2D::FG2_WHOLESLIDE},
		{ "*ALL_INTENSITY*", Fgroup2D::FG2_INTENSITY },
		{ "*ALL_MORPHOLOGY*", Fgroup2D::FG2_MORPHOLOGY },
		{ "*BASIC_MORPHOLOGY*", Fgroup2D::FG2_BASIC_MORPHOLOGY },
		{ "*ALL_GLCM*", Fgroup2D::FG2_GLCM },
		{ "*ALL_GLRLM*", Fgroup2D::FG2_GLRLM },
		{ "*ALL_GLDZM*", Fgroup2D::FG2_GLDZM },
		{ "*ALL_GLSZM*", Fgroup2D::FG2_GLSZM },
		{ "*ALL_GLDM*", Fgroup2D::FG2_GLDM },
		{ "*ALL_NGLDM*", Fgroup2D::FG2_NGLDM },
		{ "*ALL_NGTDM*", Fgroup2D::FG2_NGTDM },
		{ "*ALL_BUT_GABOR*", Fgroup2D::FG2_BUT_GABOR },
		{ "*ALL_BUT_GLCM*", Fgroup2D::FG2_ALL_BUT_GLCM },
		{ "*ALL_NEIGHBOR*", Fgroup2D::FG2_NEIG },
		{ "*GEOMOMS*", Fgroup2D::FG2_GEOMOMENTS },
		{ "*IGEOMOMS*", Fgroup2D::FG2_GEOMOMENTS_I },
		{ "*SGEOMOMS*", Fgroup2D::FG2_GEOMOMENTS_S },
	};

	std::map <std::string, Feature3D> UserFacing_3D_featureNames =
	{
		// Intensity
		{ "3COV", Nyxus::Feature3D::COV },
		{ "3COVERED_IMAGE_INTENSITY_RANGE", Nyxus::Feature3D::COVERED_IMAGE_INTENSITY_RANGE },
		{ "3ENERGY", Nyxus::Feature3D::ENERGY },
		{ "3ENTROPY", Nyxus::Feature3D::ENTROPY },
		{ "3EXCESS_KURTOSIS", Nyxus::Feature3D::EXCESS_KURTOSIS },
		{ "3HYPERFLATNESS", Nyxus::Feature3D::HYPERFLATNESS },
		{ "3HYPERSKEWNESS", Nyxus::Feature3D::HYPERSKEWNESS },
		{ "3INTEGRATED_INTENSITY", Nyxus::Feature3D::INTEGRATED_INTENSITY },
		{ "3INTERQUARTILE_RANGE", Nyxus::Feature3D::INTERQUARTILE_RANGE },
		{ "3KURTOSIS", Nyxus::Feature3D::KURTOSIS },
		{ "3MAX", Nyxus::Feature3D::MAX },
		{ "3MEAN", Nyxus::Feature3D::MEAN },
		{ "3MEAN_ABSOLUTE_DEVIATION", Nyxus::Feature3D::MEAN_ABSOLUTE_DEVIATION },
		{ "3MEDIAN", Nyxus::Feature3D::MEDIAN },
		{ "3MEDIAN_ABSOLUTE_DEVIATION", Nyxus::Feature3D::MEDIAN_ABSOLUTE_DEVIATION },
		{ "3MIN", Nyxus::Feature3D::MIN },
		{ "3MODE", Nyxus::Feature3D::MODE },
		{ "3P01", Nyxus::Feature3D::P01 },
		{ "3P10", Nyxus::Feature3D::P10 },
		{ "3P25", Nyxus::Feature3D::P25 },
		{ "3P75", Nyxus::Feature3D::P75 },
		{ "3P90", Nyxus::Feature3D::P90 },
		{ "3P99", Nyxus::Feature3D::P99 },
		{ "3QCOD", Nyxus::Feature3D::QCOD },
		{ "3RANGE", Nyxus::Feature3D::RANGE },
		{ "3ROBUST_MEAN", Nyxus::Feature3D::ROBUST_MEAN },
		{ "3ROBUST_MEAN_ABSOLUTE_DEVIATION", Nyxus::Feature3D::ROBUST_MEAN_ABSOLUTE_DEVIATION },
		{ "3ROOT_MEAN_SQUARED", Nyxus::Feature3D::ROOT_MEAN_SQUARED },
		{ "3SKEWNESS", Nyxus::Feature3D::SKEWNESS },
		{ "3STANDARD_DEVIATION", Nyxus::Feature3D::STANDARD_DEVIATION },
		{ "3STANDARD_DEVIATION_BIASED", Nyxus::Feature3D::STANDARD_DEVIATION_BIASED },
		{ "3STANDARD_ERROR", Nyxus::Feature3D::STANDARD_ERROR },
		{ "3UNIFORMITY", Nyxus::Feature3D::UNIFORMITY },
		{ "3UNIFORMITY_PIU", Nyxus::Feature3D::UNIFORMITY_PIU },
		{ "3VARIANCE", Nyxus::Feature3D::VARIANCE },
		{ "3VARIANCE_BIASED", Nyxus::Feature3D::VARIANCE_BIASED },

		
		#if 0 // 3D features planned for a future PR
		// Morphology
		{ "3AREA", Feature3D::AREA },
		{ "3MESH_VOLUME", Feature3D::MESH_VOLUME },
		{ "3VOLUME_CONVEXHULL", Feature3D::VOLUME_CONVEXHULL },
		{ "3DIAMETER_EQUAL_AREA", Feature3D::DIAMETER_EQUAL_AREA },
		{ "3DIAMETER_EQUAL_VOLUME", Feature3D::DIAMETER_EQUAL_VOLUME },

		{ "3VOLUME_PIXELS", Feature3D::VOLUME_PIXELS },
		{ "3CENTROID_X", Feature3D::CENTROID_X },
		{ "3CENTROID_Y", Feature3D::CENTROID_Y },
		{ "3CENTROID_Z", Feature3D::CENTROID_Z },
		{ "3BBOX_XMIN", Feature3D::BBOX_XMIN },
		{ "3BBOX_YMIN", Feature3D::BBOX_YMIN },
		{ "3BBOX_ZMIN", Feature3D::BBOX_ZMIN },
		{ "3BBOX_HEIGHT", Feature3D::BBOX_HEIGHT },
		{ "3BBOX_WIDTH", Feature3D::BBOX_WIDTH },
		{ "3BBOX_DEPTH", Feature3D::BBOX_DEPTH },

		// Neighbor features
		{ "3NUM_NEIGHBORS", Feature3D::NUM_NEIGHBORS },
		{ "3PERCENT_TOUCHING", Feature3D::PERCENT_TOUCHING },
		{ "3CLOSEST_NEIGHBOR1_DIST", Feature3D::CLOSEST_NEIGHBOR1_DIST },
		{ "3CLOSEST_NEIGHBOR1_ANG", Feature3D::CLOSEST_NEIGHBOR1_ANG },
		{ "3CLOSEST_NEIGHBOR2_DIST", Feature3D::CLOSEST_NEIGHBOR2_DIST },
		{ "3CLOSEST_NEIGHBOR2_ANG", Feature3D::CLOSEST_NEIGHBOR2_ANG },
		{ "3ANG_BW_NEIGHBORS_MEAN", Feature3D::ANG_BW_NEIGHBORS_MEAN },
		{ "3ANG_BW_NEIGHBORS_STDDEV", Feature3D::ANG_BW_NEIGHBORS_STDDEV },
		{ "3ANG_BW_NEIGHBORS_MODE", Feature3D::ANG_BW_NEIGHBORS_MODE },

		// Geometric moments
		{ "3SPAT_MOMENT_00", Feature3D::SPAT_MOMENT_00 },
		{ "3SPAT_MOMENT_01", Feature3D::SPAT_MOMENT_01 },
		{ "3SPAT_MOMENT_02", Feature3D::SPAT_MOMENT_02 },
		{ "3SPAT_MOMENT_03", Feature3D::SPAT_MOMENT_03 },
		{ "3SPAT_MOMENT_10", Feature3D::SPAT_MOMENT_10 },
		{ "3SPAT_MOMENT_11", Feature3D::SPAT_MOMENT_11 },
		{ "3SPAT_MOMENT_12", Feature3D::SPAT_MOMENT_12 },
		{ "3SPAT_MOMENT_13", Feature3D::SPAT_MOMENT_13 },
		{ "3SPAT_MOMENT_20", Feature3D::SPAT_MOMENT_20 },
		{ "3SPAT_MOMENT_21", Feature3D::SPAT_MOMENT_21 },
		{ "3SPAT_MOMENT_22", Feature3D::SPAT_MOMENT_22 },
		{ "3SPAT_MOMENT_23", Feature3D::SPAT_MOMENT_23 },
		{ "3SPAT_MOMENT_30", Feature3D::SPAT_MOMENT_30 },
		#endif	

		// Texture / GLCM
		{ "3GLCM_ACOR", Feature3D::GLCM_ACOR },
		{ "3GLCM_ASM", Feature3D::GLCM_ASM },
		{ "3GLCM_CLUPROM", Feature3D::GLCM_CLUPROM },
		{ "3GLCM_CLUSHADE", Feature3D::GLCM_CLUSHADE },
		{ "3GLCM_CLUTEND", Feature3D::GLCM_CLUTEND },
		{ "3GLCM_CONTRAST", Feature3D::GLCM_CONTRAST },
		{ "3GLCM_CORRELATION", Feature3D::GLCM_CORRELATION },
		{ "3GLCM_DIFAVE", Feature3D::GLCM_DIFAVE },
		{ "3GLCM_DIFENTRO", Feature3D::GLCM_DIFENTRO },
		{ "3GLCM_DIFVAR", Feature3D::GLCM_DIFVAR },
		{ "3GLCM_DIS", Feature3D::GLCM_DIS },
		{ "3GLCM_ENERGY", Feature3D::GLCM_ENERGY },
		{ "3GLCM_ENTROPY", Feature3D::GLCM_ENTROPY },
		{ "3GLCM_HOM1", Feature3D::GLCM_HOM1 },
		{ "3GLCM_HOM2", Feature3D::GLCM_HOM2 },
		{ "3GLCM_ID", Feature3D::GLCM_ID },
		{ "3GLCM_IDN", Feature3D::GLCM_IDN },
		{ "3GLCM_IDM", Feature3D::GLCM_IDM },
		{ "3GLCM_IDMN", Feature3D::GLCM_IDMN },
		{ "3GLCM_INFOMEAS1", Feature3D::GLCM_INFOMEAS1 },
		{ "3GLCM_INFOMEAS2", Feature3D::GLCM_INFOMEAS2 },
		{ "3GLCM_IV", Feature3D::GLCM_IV },
		{ "3GLCM_JAVE", Feature3D::GLCM_JAVE },
		{ "3GLCM_JE", Feature3D::GLCM_JE },
		{ "3GLCM_JMAX", Feature3D::GLCM_JMAX },
		{ "3GLCM_JVAR", Feature3D::GLCM_JVAR },
		{ "3GLCM_SUMAVERAGE", Feature3D::GLCM_SUMAVERAGE },
		{ "3GLCM_SUMENTROPY", Feature3D::GLCM_SUMENTROPY },
		{ "3GLCM_SUMVARIANCE", Feature3D::GLCM_SUMVARIANCE },
		{ "3GLCM_VARIANCE", Feature3D::GLCM_VARIANCE },
		{ "3GLCM_ASM_AVE", Feature3D::GLCM_ASM_AVE },
		{ "3GLCM_ACOR_AVE", Feature3D::GLCM_ACOR_AVE },
		{ "3GLCM_CLUPROM_AVE", Feature3D::GLCM_CLUPROM_AVE },
		{ "3GLCM_CLUSHADE_AVE", Feature3D::GLCM_CLUSHADE_AVE },
		{ "3GLCM_CLUTEND_AVE", Feature3D::GLCM_CLUTEND_AVE },
		{ "3GLCM_CONTRAST_AVE", Feature3D::GLCM_CONTRAST_AVE },
		{ "3GLCM_CORRELATION_AVE", Feature3D::GLCM_CORRELATION_AVE },
		{ "3GLCM_DIFAVE_AVE", Feature3D::GLCM_DIFAVE_AVE },
		{ "3GLCM_DIFENTRO_AVE", Feature3D::GLCM_DIFENTRO_AVE },
		{ "3GLCM_DIFVAR_AVE", Feature3D::GLCM_DIFVAR_AVE },
		{ "3GLCM_DIS_AVE", Feature3D::GLCM_DIS_AVE },
		{ "3GLCM_ENERGY_AVE", Feature3D::GLCM_ENERGY_AVE },
		{ "3GLCM_ENTROPY_AVE", Feature3D::GLCM_ENTROPY_AVE },
		{ "3GLCM_HOM1_AVE", Feature3D::GLCM_HOM1_AVE },
		{ "3GLCM_ID_AVE", Feature3D::GLCM_ID_AVE },
		{ "3GLCM_IDN_AVE", Feature3D::GLCM_IDN_AVE },
		{ "3GLCM_IDM_AVE", Feature3D::GLCM_IDM_AVE },
		{ "3GLCM_IDMN_AVE", Feature3D::GLCM_IDMN_AVE },
		{ "3GLCM_IV_AVE", Feature3D::GLCM_IV_AVE },
		{ "3GLCM_JAVE_AVE", Feature3D::GLCM_JAVE_AVE },
		{ "3GLCM_JE_AVE", Feature3D::GLCM_JE_AVE },
		{ "3GLCM_INFOMEAS1_AVE", Feature3D::GLCM_INFOMEAS1_AVE },
		{ "3GLCM_INFOMEAS2_AVE", Feature3D::GLCM_INFOMEAS2_AVE },
		{ "3GLCM_VARIANCE_AVE", Feature3D::GLCM_VARIANCE_AVE },
		{ "3GLCM_JMAX_AVE", Feature3D::GLCM_JMAX_AVE },
		{ "3GLCM_JVAR_AVE", Feature3D::GLCM_JVAR_AVE },
		{ "3GLCM_SUMAVERAGE_AVE", Feature3D::GLCM_SUMAVERAGE_AVE },
		{ "3GLCM_SUMENTROPY_AVE", Feature3D::GLCM_SUMENTROPY_AVE },
		{ "3GLCM_SUMVARIANCE_AVE", Feature3D::GLCM_SUMVARIANCE_AVE },

		{ "3GLDM_SDE", Feature3D::GLDM_SDE },
		{ "3GLDM_LDE", Feature3D::GLDM_LDE },
		{ "3GLDM_GLN", Feature3D::GLDM_GLN },
		{ "3GLDM_DN", Feature3D::GLDM_DN },
		{ "3GLDM_DNN", Feature3D::GLDM_DNN },
		{ "3GLDM_GLV", Feature3D::GLDM_GLV },
		{ "3GLDM_DV", Feature3D::GLDM_DV },
		{ "3GLDM_DE", Feature3D::GLDM_DE },
		{ "3GLDM_LGLE", Feature3D::GLDM_LGLE },
		{ "3GLDM_HGLE", Feature3D::GLDM_HGLE },
		{ "3GLDM_SDLGLE", Feature3D::GLDM_SDLGLE },
		{ "3GLDM_SDHGLE", Feature3D::GLDM_SDHGLE },
		{ "3GLDM_LDLGLE", Feature3D::GLDM_LDLGLE },
		{ "3GLDM_LDHGLE", Feature3D::GLDM_LDHGLE },

		{ "3GLDZM_SDE", Feature3D::GLDZM_SDE},
		{ "3GLDZM_LDE", Feature3D::GLDZM_LDE },
		{ "3GLDZM_LGLZE", Feature3D::GLDZM_LGLZE },
		{ "3GLDZM_HGLZE", Feature3D::GLDZM_HGLZE },
		{ "3GLDZM_SDLGLE", Feature3D::GLDZM_SDLGLE },
		{ "3GLDZM_SDHGLE", Feature3D::GLDZM_SDHGLE },
		{ "3GLDZM_LDLGLE", Feature3D::GLDZM_LDLGLE },
		{ "3GLDZM_LDHGLE", Feature3D::GLDZM_LDHGLE },
		{ "3GLDZM_GLNU", Feature3D::GLDZM_GLNU },
		{ "3GLDZM_GLNUN", Feature3D::GLDZM_GLNUN },
		{ "3GLDZM_ZDNU", Feature3D::GLDZM_ZDNU },
		{ "3GLDZM_ZDNUN", Feature3D::GLDZM_ZDNUN },
		{ "3GLDZM_ZP", Feature3D::GLDZM_ZP },
		{ "3GLDZM_GLM", Feature3D::GLDZM_GLM },
		{ "3GLDZM_GLV", Feature3D::GLDZM_GLV },
		{ "3GLDZM_ZDM", Feature3D::GLDZM_ZDM },
		{ "3GLDZM_ZDV", Feature3D::GLDZM_ZDV },
		{ "3GLDZM_ZDE", Feature3D::GLDZM_ZDE },

		{ "3NGLDM_LDE", Feature3D::NGLDM_LDE },
		{ "3NGLDM_HDE", Feature3D::NGLDM_HDE },
		{ "3NGLDM_LGLCE", Feature3D::NGLDM_LGLCE },
		{ "3NGLDM_HGLCE", Feature3D::NGLDM_HGLCE },
		{ "3NGLDM_LDLGLE", Feature3D::NGLDM_LDLGLE },
		{ "3NGLDM_LDHGLE", Feature3D::NGLDM_LDHGLE },
		{ "3NGLDM_HDLGLE", Feature3D::NGLDM_HDLGLE },
		{ "3NGLDM_HDHGLE", Feature3D::NGLDM_HDHGLE },
		{ "3NGLDM_GLNU", Feature3D::NGLDM_GLNU },
		{ "3NGLDM_GLNUN", Feature3D::NGLDM_GLNUN },
		{ "3NGLDM_DCNU", Feature3D::NGLDM_DCNU },
		{ "3NGLDM_DCNUN", Feature3D::NGLDM_DCNUN },
		{ "3NGLDM_DCP", Feature3D::NGLDM_DCP },
		{ "3NGLDM_GLM", Feature3D::NGLDM_GLM },
		{ "3NGLDM_GLV", Feature3D::NGLDM_GLV },
		{ "3NGLDM_DCM", Feature3D::NGLDM_DCM },
		{ "3NGLDM_DCV", Feature3D::NGLDM_DCV },
		{ "3NGLDM_DCENT", Feature3D::NGLDM_DCENT },
		{ "3NGLDM_DCENE", Feature3D::NGLDM_DCENE },

		{ "3NGTDM_COARSENESS", Feature3D::NGTDM_COARSENESS },
		{ "3NGTDM_CONTRAST", Feature3D::NGTDM_CONTRAST },
		{ "3NGTDM_BUSYNESS", Feature3D::NGTDM_BUSYNESS },
		{ "3NGTDM_COMPLEXITY", Feature3D::NGTDM_COMPLEXITY },
		{ "3NGTDM_STRENGTH", Feature3D::NGTDM_STRENGTH },
		{ "GLSZM_SAE", Feature3D::GLSZM_SAE },
		{ "GLSZM_LAE", Feature3D::GLSZM_LAE },
		{ "GLSZM_GLN", Feature3D::GLSZM_GLN },
		{ "GLSZM_GLNN", Feature3D::GLSZM_GLNN },
		{ "GLSZM_SZN", Feature3D::GLSZM_SZN },
		{ "GLSZM_SZNN", Feature3D::GLSZM_SZNN },
		{ "GLSZM_ZP", Feature3D::GLSZM_ZP },
		{ "GLSZM_GLV", Feature3D::GLSZM_GLV },
		{ "GLSZM_ZV", Feature3D::GLSZM_ZV },
		{ "GLSZM_ZE", Feature3D::GLSZM_ZE },
		{ "GLSZM_LGLZE", Feature3D::GLSZM_LGLZE },
		{ "GLSZM_HGLZE", Feature3D::GLSZM_HGLZE },
		{ "GLSZM_SALGLE", Feature3D::GLSZM_SALGLE },
		{ "GLSZM_SAHGLE", Feature3D::GLSZM_SAHGLE },
		{ "GLSZM_LALGLE", Feature3D::GLSZM_LALGLE },
		{ "GLSZM_LAHGLE", Feature3D::GLSZM_LAHGLE },

		{ "3GLRLM_SRE",					Feature3D::GLRLM_SRE },
		{ "3GLRLM_LRE",					Feature3D::GLRLM_LRE },
		{ "3GLRLM_GLN",					Feature3D::GLRLM_GLN },
		{ "3GLRLM_GLNN",				Feature3D::GLRLM_GLNN },
		{ "3GLRLM_RLN",					Feature3D::GLRLM_RLN },
		{ "3GLRLM_RLNN",				Feature3D::GLRLM_RLNN },
		{ "3GLRLM_RP",					Feature3D::GLRLM_RP },
		{ "3GLRLM_GLV",					Feature3D::GLRLM_GLV },
		{ "3GLRLM_RV",					Feature3D::GLRLM_RV },
		{ "3GLRLM_RE",					Feature3D::GLRLM_RE },
		{ "3GLRLM_LGLRE",				Feature3D::GLRLM_LGLRE },
		{ "3GLRLM_HGLRE",				Feature3D::GLRLM_HGLRE },
		{ "3GLRLM_SRLGLE",			Feature3D::GLRLM_SRLGLE },
		{ "3GLRLM_SRHGLE",			Feature3D::GLRLM_SRHGLE },
		{ "3GLRLM_LRLGLE",			Feature3D::GLRLM_LRLGLE },
		{ "3GLRLM_LRHGLE",			Feature3D::GLRLM_LRHGLE },
		{ "3GLRLM_SRE_AVE",			Feature3D::GLRLM_SRE_AVE },
		{ "3GLRLM_LRE_AVE",			Feature3D::GLRLM_LRE_AVE },
		{ "3GLRLM_GLN_AVE",			Feature3D::GLRLM_GLN_AVE },
		{ "3GLRLM_GLNN_AVE",		Feature3D::GLRLM_GLNN_AVE },
		{ "3GLRLM_RLN_AVE",			Feature3D::GLRLM_RLN_AVE },
		{ "3GLRLM_RLNN_AVE",		Feature3D::GLRLM_RLNN_AVE },
		{ "3GLRLM_RP_AVE",			Feature3D::GLRLM_RP_AVE },
		{ "3GLRLM_GLV_AVE",			Feature3D::GLRLM_GLV_AVE },
		{ "3GLRLM_RV_AVE",			Feature3D::GLRLM_RV_AVE },
		{ "3GLRLM_RE_AVE",			Feature3D::GLRLM_RE_AVE },
		{ "3GLRLM_LGLRE_AVE",		Feature3D::GLRLM_LGLRE_AVE },
		{ "3GLRLM_HGLRE_AVE",		Feature3D::GLRLM_HGLRE_AVE },
		{ "3GLRLM_SRLGLE_AVE",	Feature3D::GLRLM_SRLGLE_AVE },
		{ "3GLRLM_SRHGLE_AVE",	Feature3D::GLRLM_SRHGLE_AVE },
		{ "3GLRLM_LRLGLE_AVE",	Feature3D::GLRLM_LRLGLE_AVE },
		{ "3GLRLM_LRHGLE_AVE",	Feature3D::GLRLM_LRHGLE_AVE }

	};

	std::map <std::string, Fgroup3D> UserFacing3dFeaturegroupNames =
	{
		{ "*3D_ALL*", Fgroup3D::FG3_ALL },
		{ "*3D_ALL_INTENSITY*", Fgroup3D::FG3_INTENSITY },
		{ "*3D_ALL_MORPHOLOGY*", Fgroup3D::FG3_MORPHOLOGY },
		{ "*3D_ALL_TEXTURE*", Fgroup3D::FG3_TEXTURE },
		{ "*3D_GLCM*", Fgroup3D::FG3_GLCM },
		{ "*3D_GLDM*", Fgroup3D::FG3_GLDM },
		{ "*3D_NGLDM*", Fgroup3D::FG3_NGLDM },
		{ "*3D_NGTDM*", Fgroup3D::FG3_NGTDM },
		{ "*3D_GLDZM*", Fgroup3D::FG3_GLDZM },
		{ "*3D_GLSZM*", Fgroup3D::FG3_GLSZM },
		{ "*3D_GLRLM*", Fgroup3D::FG3_GLRLM },
		{ "*3D_ALL_NEIGHBOR*", Fgroup3D::FG3_NEIG },
		{ "*3D_MOMENTS*", Fgroup3D::FG3_MOMENTS },
	};

} // namespace Nyxus

FeatureSet::FeatureSet()
{
	enableAll(true);
}

bool FeatureSet::find_2D_FeatureByString (
	// [in]
	const std::string & name, 
	// [out]
	int & f)		// signed Feature2D
{
	int enable = 1;

	// strip possible set operation '+' or '-'
	std::string s = name;

	// digest optional unary operator (sign)
	if (std::ispunct(name[0]))
		if (name[0] == '-' || name[0] == '+')
		{
			s = name.substr(1);
			enable = name[0] == '+' ? 1 : -1;
		}
		else
			return false; // invalid unary operator

	// search
	auto it_f = Nyxus::UserFacingFeatureNames.find (s);

	if (it_f == Nyxus::UserFacingFeatureNames.end())
		return false;

	f = enable * (int) it_f->second;

	return true;
}

bool FeatureSet::find_2D_GroupByString (
	const std::string & name, 
	int & grpCode)		// signed Fgroup2D
{
	int enable = 1;

	// strip possible set operation '+' or '-'
	std::string s = name;

	// digest optional unary operator (sign)
	if (name[0] == '-' || name[0] == '+')
	{
		s = name.substr(1);
		enable = name[0] == '+' ? 1 : -1;
	}

	// search
	auto itr = Nyxus::UserFacing2dFeaturegroupNames.find (s);

	if (itr == Nyxus::UserFacing2dFeaturegroupNames.end())
		return false;

	grpCode = enable * (int) itr->second;

	return true;
}

bool FeatureSet::find_3D_FeatureByString (const std::string & name, int & f)
{
	int enable = 1;

	// strip possible set operation '+' or '-'
	std::string s = name;

	// digest optional unary operator (sign)
	if (std::ispunct(name[0]))
		if (name[0] == '-' || name[0] == '+')
		{
			s = name.substr(1);
			enable = name[0] == '+' ? 1 : -1;
		}
		else
			return false; // invalid unary operator

	// search
	auto it_f = Nyxus::UserFacing_3D_featureNames.find(s);

	if (it_f == Nyxus::UserFacing_3D_featureNames.end())
		return false;

	f = enable * (int)it_f->second;

	return true;
}

bool FeatureSet::find_3D_GroupByString (const std::string & name, int & grpCode)
{
	int enable = 1;

	// strip possible set operation '+' or '-'
	std::string s = name;

	// digest optional unary operator (sign)
	if (name[0] == '-' || name[0] == '+')
	{
		s = name.substr(1);
		enable = name[0] == '+' ? 1 : -1;
	}

	// search
	auto itr = Nyxus::UserFacing3dFeaturegroupNames.find(s);

	if (itr == Nyxus::UserFacing3dFeaturegroupNames.end())
		return false;

	grpCode = enable * (int)itr->second;

	return true;
}

bool FeatureSet::find_IMQ_FeatureByString (const std::string & name, int & f)
{
	// strip possible set operation '+' or '-'
	std::string s = name;

	if (name[0] == '-' || name[0] == '+')
		s = name.substr(1);

	// search
	auto it_f = Nyxus::UserFacingIMQFeatureNames.find (s);

	if (it_f == Nyxus::UserFacingIMQFeatureNames.end())
		return false;

	f = (int) it_f->second;
	return true;
}

bool FeatureSet::find_IMQ_GroupByString (const std::string & name, int & grpCode)
{
	// strip possible set operation '+' or '-'
	std::string s = name;

	if (name[0] == '-' || name[0] == '+')
		s = name.substr(1);

	// search
	auto itr = Nyxus::UserFacingIMQFeaturegroupNames.find (s);

	if (itr == Nyxus::UserFacingIMQFeaturegroupNames.end())
		return false;

	grpCode = (int) itr->second;
	return true;
}

std::string FeatureSet::findFeatureNameByCode (Feature2D fcode)
{
	// Search
	auto result = std::find_if(
		Nyxus::UserFacingFeatureNames.begin(),
		Nyxus::UserFacingFeatureNames.end(),
		[fcode](const auto& finfo)
		{ return finfo.second == fcode; });

	// Return the feature name if found
	if (result != Nyxus::UserFacingFeatureNames.end())
		return result->first;

	// Nothing is found
	return "[UNNAMED 2D FEATURE]";
}

std::string FeatureSet::findFeatureNameByCode (Feature3D fcode)
{
	// Search
	auto result = std::find_if(
		Nyxus::UserFacing_3D_featureNames.begin(),
		Nyxus::UserFacing_3D_featureNames.end(),
		[fcode](const auto& finfo)
		{ return finfo.second == fcode; });

	// Return the feature name if found
	if (result != Nyxus::UserFacing_3D_featureNames.end())
		return result->first;

	// Nothing is found
	return "[UNNAMED 3D FEATURE]";
}

std::string FeatureSet::findGroupNameByCode (Fgroup2D code)
{
	// Search
	auto result = std::find_if(
		Nyxus::UserFacing2dFeaturegroupNames.begin(),
		Nyxus::UserFacing2dFeaturegroupNames.end(),
		[code](const auto& finfo)
		{ return finfo.second == code; });

	// Return the feature name if found
	if (result != Nyxus::UserFacing2dFeaturegroupNames.end())
		return result->first;

	// Not found
	return "UNNAMED_FEATURE_GROUP_" + std::to_string((int)code);
}

std::string FeatureSet::findGroupNameByCode (Fgroup3D code)
{
	// Search
	auto result = std::find_if(
		Nyxus::UserFacing3dFeaturegroupNames.begin(),
		Nyxus::UserFacing3dFeaturegroupNames.end(),
		[code](const auto& finfo)
		{ return finfo.second == code; });

	// Return the feature name if found
	if (result != Nyxus::UserFacing3dFeaturegroupNames.end())
		return result->first;

	// Not found
	return "UNNAMED_FEATURE_GROUP_" + std::to_string((int)code);
}

std::string FeatureSet::findGroupNameByCode (FgroupIMQ code)
{
	// Search
	auto result = std::find_if(
		Nyxus::UserFacingIMQFeaturegroupNames.begin(),
		Nyxus::UserFacingIMQFeaturegroupNames.end(),
		[code](const auto& finfo)
		{ return finfo.second == code; });

	// Return the feature name if found
	if (result != Nyxus::UserFacingIMQFeaturegroupNames.end())
		return result->first;

	// Not found
	return "UNNAMED_FEATURE_GROUP_" + std::to_string((int)code);
}

// Relying on RVO rather than std::move
std::vector<std::tuple<std::string, int>> FeatureSet::getEnabledFeatures()
{
	std::vector<std::tuple<std::string, int>> F;

	// 2D features
	for (int i = 0; i < (int) Nyxus::Feature2D::_COUNT_; i++)
	{
		if (m_enabledFeatures[i])
		{
			// Find feature i's name
			std::string fname = "2D-feature" + std::to_string(i);	// name feature<number> will indicate a number of a missing user-facing feature name, if any
			for (const auto& f : Nyxus::UserFacingFeatureNames)
			{
				if (f.second == (Nyxus::Feature2D) i)
				{
					fname = f.first;
					break;
				}
			}

			// Save the pair
			std::tuple<std::string, int> f (fname, i);
			F.push_back(f);
		}
	}

	// 3D features
	for (int i = (int) Nyxus::Feature2D::_COUNT_; i < (int) Nyxus::Feature3D::_COUNT_; i++)
	{
		if (m_enabledFeatures[i])
		{
			// Find feature i's name
			std::string fname = "3D-feature" + std::to_string(i);	// name feature<number> will indicate a number of a missing user-facing feature name, if any
			for (const auto& f : Nyxus::UserFacing_3D_featureNames)
			{
				if (f.second == (Nyxus::Feature3D) i)
				{
					fname = f.first;
					break;
				}
			}

			// Save the pair
			std::tuple<std::string, int> f (fname, i);
			F.push_back(f);
		}
	}

	// Image Quality features
	for (int i = (int) Nyxus::Feature3D::_COUNT_; i < (int) Nyxus::FeatureIMQ::_COUNT_; i++)
	{
		if (m_enabledFeatures[i])
		{
			// Find feature i's name
			std::string fname = "IMQ-feature" + std::to_string(i);	// name feature<number> will indicate a number of a missing user-facing feature name, if any
			for (const auto& f : Nyxus::UserFacingIMQFeatureNames)
			{
				if (f.second == (Nyxus::FeatureIMQ) i)
				{
					fname = f.first;
					break;
				}
			}

			// Save the pair
			std::tuple<std::string, int> f (fname, i);
			F.push_back(f);
		}
	}

	return F;
}
